dim(d2[[re_id]])
dim(d2)
dim(d2[[1]])
dim(Z[[1]])
Z[[1]]
Z <- vector("list",length(re_list))
for(re_id in re_list){
sd_i <- sd[[re_id]][i,]
L_i <- L[[re_id]][i,]
yhat_i <- yhat[1,]
Z[[re_id]] <- sapply(J[[re_id]], function(J.){
index <- which(unique(J[[re_id]])==J.)
z <- .buildz(data = post, id = J., usecoef,usegroup)
do.call("cbind",z) %*% t(sd_i %*% matrix(L_i, nrow = 2))
})
}
for(re_id in re_list){
sd_i <- sd[[re_id]][i,]
L_i <- L[[re_id]][i,]
yhat_i <- yhat[1,]
Z[[re_id]] <- sapply(J[[re_id]], function(J.){
index <- which(unique(J[[re_id]])==J.)
z <- .buildz(data = post, id = J., usecoef,usegroup)
do.call("cbind",z) %*% t(sd_i %*% matrix(L_i, nrow = 2))
})
}
sd_i <- sd[[re_id]][i,]
L_i <- L[[re_id]][i,]
yhat_i <- yhat[1,]
Z[[re_id]] <- sapply(J[[re_id]], function(J.){
index <- which(unique(J[[re_id]])==J.)
z <- .buildz(data = post, id = J., usecoef,usegroup)
do.call("cbind",z) %*% t(sd_i %*% matrix(L_i, nrow = 2))
})
Z[[1]]
dim(Z[[1]])
dim(d2[[1]])
J. =
1
index <- which(unique(J[[re_id]])==J.)
z <- .buildz(data = post, id = J., usecoef,usegroup)
dim(z)
dim(do.call("cbind",z))
t(sd_i %*% matrix(L_i, nrow = 2))
sd_i
diag(sd_i)
do.call("cbind",z) %*% diag(sd_i) %*% matrix(L_i, nrow = 2)
dim( diag(sd_i) )
dim( do.call("cbind",z) )
dim(do.call("cbind",z) %*% diag(sd_i) %*% matrix(L_i, nrow = 2))
Z[[re_id]] <- sapply(J[[re_id]], function(J.){
index <- which(unique(J[[re_id]])==J.)
z <- .buildz(data = post, id = J., usecoef,usegroup)
do.call("cbind",z) %*% diag(sd_i) %*% matrix(L_i, nrow = 2)
})
dim(Z[[1]])
dim(do.call("cbind",z) %*% diag(sd_i) %*% matrix(L_i, nrow = 2))
Z[[re_id]] <- lapply(J[[re_id]], function(J.){
index <- which(unique(J[[re_id]])==J.)
z <- .buildz(data = post, id = J., usecoef,usegroup)
do.call("cbind",z) %*% diag(sd_i) %*% matrix(L_i, nrow = 2)
})
View(Z)
View(d2)
d2[[re_id]]
r <- vector("list",length(re_list))
sample_i <- function(i){
Z <- vector("list",length(re_list))
r <- vector("list",length(re_list))
for(re_id in re_list){
sd_i <- sd[[re_id]][i,]
L_i <- L[[re_id]][i,]
yhat_i <- yhat[1,]
r[[re_id]] <- lapply(J[[re_id]], function(J.){
index <- which(unique(J[[re_id]])==J.)
z <- .buildz(data = post, id = J., usecoef,usegroup)
do.call("cbind",z) %*% diag(sd_i) %*% matrix(L_i, nrow = 2)
})
Z[[re_id]] <- sapply(r[[re_id]],function(tmp) tmp %*% t(d2))
}
Z.sum <- do.call("+",Z)
colMeans(backtrans.fun(yhat_i + Z.sum))
}
t(sapply(seq_len(nrow(sd[[1]])), sample_i))
sample_i(1)
Z[[re_id]]
View(r[[re_id]] )
Z <- vector("list",length(re_list))
r <- vector("list",length(re_list))
re_id =1
sd_i <- sd[[re_id]][i,]
L_i <- L[[re_id]][i,]
yhat_i <- yhat[1,]
r[[re_id]] <- lapply(J[[re_id]], function(J.){
index <- which(unique(J[[re_id]])==J.)
z <- .buildz(data = post, id = J., usecoef,usegroup)
do.call("cbind",z) %*% diag(sd_i) %*% matrix(L_i, nrow = 2)
})
View(r[[re_id]])
tmp = r[[re_id]][[1]]
tmp %*% t(d2)
dim(tmp)
dim(d2)
d2
t(d2[[re_id]]))
Z[[re_id]] <- sapply(r[[re_id]],function(tmp) tmp %*% t(d2[[re_id]]))
k
z
View(z)
x <- matrix(1:10,nrow=2)
sample(x,100)
sample(x,2)
x
d2[[1]]
post
dim(post)
nsample <- nrow(post)
nsample
sample(seq_len(nsample), min(nsample,k))
z
z$`z_1[1,1]`[sample(seq_len(nsample), min(nsample,k)), ]
z[[1]][sample(seq_len(nsample), min(nsample,k)), ]
sample(seq_len(nsample), min(nsample,k))
View(z)
z_sam <- sample(seq_len(nsample), min(nsample,k))
z_sam <- sample(seq_len(nsample), min(nsample,k))
z <- lapply(z, function(z.) z.[z_sam])
View(z)
sample_i <- function(i){
Z <- vector("list",length(re_list))
r <- vector("list",length(re_list))
for(re_id in re_list){
sd_i <- sd[[re_id]][i,]
L_i <- L[[re_id]][i,]
yhat_i <- yhat[1,]
r[[re_id]] <- lapply(J[[re_id]], function(J.){
index <- which(unique(J[[re_id]])==J.)
z <- .buildz(data = post, id = J., usecoef,usegroup)
z_sam <- sample(seq_len(nsample), min(nsample,k))
z <- lapply(z, function(z.) z.[z_sam])
do.call("cbind",z) %*% diag(sd_i) %*% matrix(L_i, nrow = 2)
})
Z[[re_id]] <- sapply(r[[re_id]],function(tmp) tmp %*% t(d2[[re_id]]))
}
Z.sum <- do.call("+",Z)
colMeans(backtrans.fun(yhat_i + Z.sum))
}
sample_i(1)
r[[re_id]] <- lapply(J[[re_id]], function(J.){
index <- which(unique(J[[re_id]])==J.)
z <- .buildz(data = post, id = J., usecoef,usegroup)
z_sam <- sample(seq_len(nsample), min(nsample,k))
z <- lapply(z, function(z.) z.[z_sam])
do.call("cbind",z) %*% diag(sd_i) %*% matrix(L_i, nrow = 2)
})
dim(r[[re_id]])
View(r[[re_id]] )
Z[[re_id]] <- sapply(r[[re_id]],function(tmp) tmp %*% t(d2[[re_id]]))
dim(Z[[re_id]])
r[[re_id]][[1]]
tmp <- r[[re_id]][[1]]
dim(t(d2[[re_id]]))
dim(tmp)
d2[[re_id]]
dim(d2[[re_id]])
as.data.frame(d2[[re_id]])
as.data.frame(t(d2[[re_id]]))
Z[[re_id]] <- mapply(r[[re_id]],as.data.frame(t(d2[[re_id]])), FUN = function(r_tmp, d2_tmp) r_tmp %*% d2_tmp)
d2_tmp
d2_tmp <- as.data.frame(t(d2[[re_id]]))[,1]
d2_tmp
tmp
r_tmp <- r[[re_id]][[1]]
r_tmp
r_tmp %*% d2_tmp
dim( Z[[re_id]])
Z.sum <- do.call("+",Z)
dim(Z.sum)
dim(yhat_i)
i
yhat_i <- yhat[i,]
yhat_i
dim(yhat_i)
yhat_i + Z.sum
dim(yhat_i + Z.sum)
colMeans(backtrans.fun(yhat_i + Z.sum))
sample_i <- function(i){
Z <- vector("list",length(re_list))
r <- vector("list",length(re_list))
for(re_id in re_list){
sd_i <- sd[[re_id]][i,]
L_i <- L[[re_id]][i,]
yhat_i <- yhat[i,]
r[[re_id]] <- lapply(J[[re_id]], function(J.){
index <- which(unique(J[[re_id]])==J.)
z <- .buildz(data = post, id = J., usecoef,usegroup)
z_sam <- sample(seq_len(nsample), min(nsample,k))
z <- lapply(z, function(z.) z.[z_sam])
do.call("cbind",z) %*% diag(sd_i) %*% matrix(L_i, nrow = 2)
})
Z[[re_id]] <- mapply(r[[re_id]], as.data.frame(t(d2[[re_id]])),
FUN = function(r_tmp, d2_tmp) r_tmp %*% d2_tmp)
}
Z.sum <- do.call("+",Z)
colMeans(backtrans.fun(yhat_i + Z.sum))
}
sample_i(1)
sample_i(2)
system.time(sample_i(2))
system.time(sample_i(2))
system.time(sample_i(2))
system.time(sample_i(2))
source("~/Documents/Research/Bayesian MAM/BMAM/integretere_fullbayesian.R")
mc.T <- marginalcoef(object = model_brms, fullbayesian = T, preddat = dat2pred,CIType="ETI", CI = 0.95, posterior = T)
save(mc.T, file = "mc_simulation.rds")
source("~/Documents/Research/Bayesian MAM/BMAM/integretere_fullbayesian.R")
mc.T <- marginalcoef(object = model_brms, fullbayesian = T, preddat = dat2pred,CIType="ETI", CI = 0.95, posterior = T)
save(mc.T, file = "mc_simulation.rds")
### plot ##################
## plot set up
mc <- mc.T
library(gridExtra)
library(patchwork)
GGPLOTTEXTSIZE <- 15
PLOTWIDTH <- PLOTHEIGHT <- 7
myrange=c(-3,2.5)
theme_set(theme_bw())
theme_replace(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## data prepare
themam.uci <- themam$mam$fitted+1.96*themam$mam$fitted_se
themam.lci <- themam$mam$fitted-1.96*themam$mam$fitted_se
dfplotfx1 <- data.frame(x = rep(dat2pred$x1[1:100],2),
fitted = c(mc$Predicted_Summary$M[1:100],themam$mam$fitted[1:100]),
uci = c(mc$Predicted_Summary$UL[1:100], themam.uci[1:100]),
lci = c(mc$Predicted_Summary$LL[1:100], themam.lci[1:100]),
Method = rep(c("BMAM", "MAM"), each = 100))
dfplotfx2 <- data.frame(x = rep(dat2pred$x2[101:200],2),
fitted = c(mc$Predicted_Summary$M[101:200],themam$mam$fitted[101:200]),
uci = c(mc$Predicted_Summary$UL[101:200], themam.uci[101:200]),
lci = c(mc$Predicted_Summary$LL[101:200], themam.lci[101:200]),
Method = rep(c("BMAM", "MAM"), each = 100))
## plot
ggx1 <- ggplot(data=dfplotfx1,aes(x=x,y=fitted, group=Method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx1[1:100],2)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[1]))+
ylab(expression(f~(X[1])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx1
View(mc.T)
mc.T <- marginalcoef(object = model_brms, fullbayesian = T, preddat = dat2pred,CIType="ETI", CI = 0.95, posterior = T)
yhat_i
dim( Z.sum)
View( Z.sum)
View( Z.sum + yhat_i)
dim(yhat_i)
length(yhat_i)
dim(Z.sum)
a <- matrix(1:10,nrow= 2)
b <- 1:2
a + b
a
b <- 1:5
a + b
View(sweep(Z.sum, 2, yhat_i, "+"))
sweep(Z.sum, 2, yhat_i, "+") - Z.sum
View(sweep(Z.sum, 2, yhat_i, "+") - Z.sum)
source("~/Documents/Research/Bayesian MAM/BMAM/integretere_fullbayesian.R")
mc.T <- marginalcoef(object = model_brms, fullbayesian = T, preddat = dat2pred,CIType="ETI", CI = 0.95, posterior = T)
save(mc.T, file = "mc_simulation.rds")
### plot ##################
## plot set up
mc <- mc.T
library(gridExtra)
library(patchwork)
GGPLOTTEXTSIZE <- 15
PLOTWIDTH <- PLOTHEIGHT <- 7
myrange=c(-3,2.5)
theme_set(theme_bw())
theme_replace(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## data prepare
themam.uci <- themam$mam$fitted+1.96*themam$mam$fitted_se
themam.lci <- themam$mam$fitted-1.96*themam$mam$fitted_se
dfplotfx1 <- data.frame(x = rep(dat2pred$x1[1:100],2),
fitted = c(mc$Predicted_Summary$M[1:100],themam$mam$fitted[1:100]),
uci = c(mc$Predicted_Summary$UL[1:100], themam.uci[1:100]),
lci = c(mc$Predicted_Summary$LL[1:100], themam.lci[1:100]),
Method = rep(c("BMAM", "MAM"), each = 100))
dfplotfx2 <- data.frame(x = rep(dat2pred$x2[101:200],2),
fitted = c(mc$Predicted_Summary$M[101:200],themam$mam$fitted[101:200]),
uci = c(mc$Predicted_Summary$UL[101:200], themam.uci[101:200]),
lci = c(mc$Predicted_Summary$LL[101:200], themam.lci[101:200]),
Method = rep(c("BMAM", "MAM"), each = 100))
## plot
ggx1 <- ggplot(data=dfplotfx1,aes(x=x,y=fitted, group=Method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx1[1:100],2)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[1]))+
ylab(expression(f~(X[1])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx1
mc.F <- marginalcoef(object = model_brms, fullbayesian = F, preddat = dat2pred,CIType="ETI", CI = 0.95, posterior = T)
dfplotfx1 <- data.frame(x = rep(dat2pred$x1[1:100],3),
fitted = c(mc.T$Predicted_Summary$M[1:100],mc.F$Predicted_Summary$M[1:100], themam$mam$fitted[1:100]),
uci = c(mc.T$Predicted_Summary$UL[1:100],mc.F$Predicted_Summary$M[1:100], themam.uci[1:100]),
lci = c(mc.T$Predicted_Summary$LL[1:100],mc.F$Predicted_Summary$M[1:100], themam.lci[1:100]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
dfplotfx1 <- data.frame(x = rep(dat2pred$x1[1:100],3),
fitted = c(mc.T$Predicted_Summary$M[1:100],mc.F$Predicted_Summary$M[1:100], themam$mam$fitted[1:100]),
uci = c(mc.T$Predicted_Summary$UL[1:100],mc.F$Predicted_Summary$M[1:100], themam.uci[1:100]),
lci = c(mc.T$Predicted_Summary$LL[1:100],mc.F$Predicted_Summary$M[1:100], themam.lci[1:100]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
dfplotfx2 <- data.frame(x = rep(dat2pred$x1[101:200],3),
fitted = c(mc.T$Predicted_Summary$M[101:200],mc.F$Predicted_Summary$M[101:200], themam$mam$fitted[101:200]),
uci = c(mc.T$Predicted_Summary$UL[101:200],mc.F$Predicted_Summary$M[101:200], themam.uci[101:200]),
lci = c(mc.T$Predicted_Summary$LL[101:200],mc.F$Predicted_Summary$M[101:200], themam.lci[101:200]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
## plot
ggx1 <- ggplot(data=dfplotfx1,aes(x=x,y=fitted, group=Method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx1[1:100],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[1]))+
ylab(expression(f~(X[1])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx1
## data prepare
themam.uci <- themam$mam$fitted+1.96*themam$mam$fitted_se
themam.lci <- themam$mam$fitted-1.96*themam$mam$fitted_se
dfplotfx1 <- data.frame(x = rep(dat2pred$x1[1:100],3),
fitted = c(mc.T$Predicted_Summary$M[1:100],mc.F$Predicted_Summary$M[1:100], themam$mam$fitted[1:100]),
uci = c(mc.T$Predicted_Summary$UL[1:100],mc.F$Predicted_Summary$M[1:100], themam.uci[1:100]),
lci = c(mc.T$Predicted_Summary$LL[1:100],mc.F$Predicted_Summary$M[1:100], themam.lci[1:100]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
dfplotfx2 <- data.frame(x = rep(dat2pred$x1[101:200],3),
fitted = c(mc.T$Predicted_Summary$M[101:200],mc.F$Predicted_Summary$M[101:200], themam$mam$fitted[101:200]),
uci = c(mc.T$Predicted_Summary$UL[101:200],mc.F$Predicted_Summary$M[101:200], themam.uci[101:200]),
lci = c(mc.T$Predicted_Summary$LL[101:200],mc.F$Predicted_Summary$M[101:200], themam.lci[101:200]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
View(dfplotfx2)
## plot
ggx1 <- ggplot(data=dfplotfx1,aes(x=x,y=fitted, group=Method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx1[1:100],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[1]))+
ylab(expression(f~(X[1])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx1
mc.F$Predicted_Summary$M[101:200]
dfplotfx1 <- data.frame(x = rep(dat2pred$x1[1:100],3),
fitted = c(mc.T$Predicted_Summary$M[1:100],mc.F$Predicted_Summary$M[1:100], themam$mam$fitted[1:100]),
uci = c(mc.T$Predicted_Summary$UL[1:100],mc.F$Predicted_Summary$UL[1:100], themam.uci[1:100]),
lci = c(mc.T$Predicted_Summary$LL[1:100],mc.F$Predicted_Summary$LL[1:100], themam.lci[1:100]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
dfplotfx2 <- data.frame(x = rep(dat2pred$x1[101:200],3),
fitted = c(mc.T$Predicted_Summary$M[101:200],mc.F$Predicted_Summary$M[101:200], themam$mam$fitted[101:200]),
uci = c(mc.T$Predicted_Summary$UL[101:200],mc.F$Predicted_Summary$UL[101:200], themam.uci[101:200]),
lci = c(mc.T$Predicted_Summary$LL[101:200],mc.F$Predicted_Summary$LL[101:200], themam.lci[101:200]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
## plot
ggx1 <- ggplot(data=dfplotfx1,aes(x=x,y=fitted, group=Method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx1[1:100],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[1]))+
ylab(expression(f~(X[1])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx1
ggx2 <- ggplot(data=dfplotfx2,aes(x=x,y=fitted, group=Method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx2[101:200],2)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[2]))+
ylab(expression(f~(X[2])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx2
ggx1
## plot
ggx1 <- ggplot(data=dfplotfx1,aes(x=x,y=fitted, group=Method))+
# geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx1[1:100],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[1]))+
ylab(expression(f~(X[1])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx1
ggx2 <- ggplot(data=dfplotfx2,aes(x=x,y=fitted, group=Method))+
# geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx2[101:200],2)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[2]))+
ylab(expression(f~(X[2])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx2
dfplotfx2 <- data.frame(x = rep(dat2pred$x1[101:200],3),
fitted = c(mc.T$Predicted_Summary$M[101:200],mc.F$Predicted_Summary$M[101:200], themam$mam$fitted[101:200]),
uci = c(mc.T$Predicted_Summary$UL[101:200],mc.F$Predicted_Summary$UL[101:200], themam.uci[101:200]),
lci = c(mc.T$Predicted_Summary$LL[101:200],mc.F$Predicted_Summary$LL[101:200], themam.lci[101:200]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
ggx2 <- ggplot(data=dfplotfx2,aes(x=x,y=fitted, group=Method))+
# geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx2[101:200],2)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[2]))+
ylab(expression(f~(X[2])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx2
ggx2 <- ggplot(data=dfplotfx2,aes(x=x,y=fitted, group=Method))+
# geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx2[101:200],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[2]))+
ylab(expression(f~(X[2])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx2
dfplotfx2 <- data.frame(x = rep(dat2pred$x2[101:200],3),
fitted = c(mc.T$Predicted_Summary$M[101:200],mc.F$Predicted_Summary$M[101:200], themam$mam$fitted[101:200]),
uci = c(mc.T$Predicted_Summary$UL[101:200],mc.F$Predicted_Summary$UL[101:200], themam.uci[101:200]),
lci = c(mc.T$Predicted_Summary$LL[101:200],mc.F$Predicted_Summary$LL[101:200], themam.lci[101:200]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
## plot
ggx1 <- ggplot(data=dfplotfx1,aes(x=x,y=fitted, group=Method))+
# geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx1[1:100],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[1]))+
ylab(expression(f~(X[1])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx1
ggx2 <- ggplot(data=dfplotfx2,aes(x=x,y=fitted, group=Method))+
# geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx2[101:200],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[2]))+
ylab(expression(f~(X[2])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx2
combined <- ggx1 + ggx2 & theme(legend.position = "right")
gg_combined <- combined + plot_layout(guides = "collect")  # combine two plots
gg_combined
## save plots
ggsave(filename = file.path(paste0('figures/fullbayes(k=100)-simulation-combined', 'K = ', as.character(K),
'Nk = ', as.character(Nk), '.pdf')),
plot = gg_combined,
width=2*PLOTWIDTH,height=PLOTHEIGHT)
mc.T <- marginalcoef(object = model_brms, fullbayesian = T, k=500, preddat = dat2pred,CIType="ETI", CI = 0.95, posterior = T)
save(mc.T, file = "mc_simulation.rds")
## data prepare
themam.uci <- themam$mam$fitted+1.96*themam$mam$fitted_se
themam.lci <- themam$mam$fitted-1.96*themam$mam$fitted_se
dfplotfx1 <- data.frame(x = rep(dat2pred$x1[1:100],3),
fitted = c(mc.T$Predicted_Summary$M[1:100],mc.F$Predicted_Summary$M[1:100], themam$mam$fitted[1:100]),
uci = c(mc.T$Predicted_Summary$UL[1:100],mc.F$Predicted_Summary$UL[1:100], themam.uci[1:100]),
lci = c(mc.T$Predicted_Summary$LL[1:100],mc.F$Predicted_Summary$LL[1:100], themam.lci[1:100]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
dfplotfx2 <- data.frame(x = rep(dat2pred$x2[101:200],3),
fitted = c(mc.T$Predicted_Summary$M[101:200],mc.F$Predicted_Summary$M[101:200], themam$mam$fitted[101:200]),
uci = c(mc.T$Predicted_Summary$UL[101:200],mc.F$Predicted_Summary$UL[101:200], themam.uci[101:200]),
lci = c(mc.T$Predicted_Summary$LL[101:200],mc.F$Predicted_Summary$LL[101:200], themam.lci[101:200]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
## plot
ggx1 <- ggplot(data=dfplotfx1,aes(x=x,y=fitted, group=Method))+
# geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx1[1:100],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[1]))+
ylab(expression(f~(X[1])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx1
ggx2 <- ggplot(data=dfplotfx2,aes(x=x,y=fitted, group=Method))+
# geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx2[101:200],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[2]))+
ylab(expression(f~(X[2])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx2
combined <- ggx1 + ggx2 & theme(legend.position = "right")
gg_combined <- combined + plot_layout(guides = "collect")  # combine two plots
gg_combined
## save plots
ggsave(filename = file.path(paste0('figures/fullbayes(k=500)-simulation-combined', 'K = ', as.character(K),
'Nk = ', as.character(Nk), '.pdf')),
plot = gg_combined,
width=2*PLOTWIDTH,height=PLOTHEIGHT)
## plot
ggx1 <- ggplot(data=dfplotfx1,aes(x=x,y=fitted, group=Method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.1, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx1[1:100],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[1]))+
ylab(expression(f~(X[1])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx1

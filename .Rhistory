ggsave(filename = file.path('figures/beaver-time-male.pdf'),plot = ggM,width=PLOTWIDTH,height=PLOTHEIGHT)
### compare with frequentist MAM ##############################
library(mam)
library(mgcv)
library(gamm4)
library(tidyverse)
library(brms)
library(brmsmargins)
library(data.table)
## generate data
get_data_mam <- function(SSmat,x1,x2,x3,K,Nk){
if(SSmat[2,2]==0){
V <- as.data.frame(rnorm(K,0,sqrt(SSmat[1,1])))
colnames(V) <- "intercepts"
V$id <- 1:K
}else{
V <- mvtnorm::rmvnorm(K,sigma = SSmat) # Intercept and slope
V <- as.data.frame(V)
colnames(V) <- c("intercepts","slopes")
V$id <- 1:K
}
dat <- data.frame(id = rep(1:K,each=Nk))
dat <- merge(dat,V,by="id",all.x=TRUE)
dat$x1 <- x1
dat$x2 <- x2
dat$x3 <- x3
dat$fx1 <- f1(x1)
dat$fx2 <- f2(x2)
## approximation from Hedeker
if(SSmat[2,2]==0){
Ui <- dat[,c("intercepts")]
vars <- SSmat[1,1]+ ##
+(pi^2)/3 # (pi^2)/3 is approximate due to logistic distn
}else{
Z <- cbind(1,x3) # ranefs with design matrix
Ui <- apply(Z*dat[,c("intercepts","slopes")],1,sum)
vars <- colSums(((chol(SSmat)%*%t(Z)))^2)+ ## faster than #diag(Z%*%SS%*%t(Z))
+(pi^2)/3 # (pi^2)/3 is approximate due to logistic distn
}
estar <- rlogis(K*Nk) # approx: rnorm(K*Nk,0,sqrt((pi^2)/3))
dat <- within(dat,{y <- as.numeric(pnorm(estar+Ui,0,sqrt(vars)) < mam::ilogit(fx1 + fx2 +               ## non linear fixed effects
beta3*x3 +                ## linear fixed effects
0))  })  ## random effects on other side
return(dat)
}
f1temp <- function(x){(1.5*sin(pi*x)-2*x)}
f1 <- function(x) f1temp(x)-f1temp(0)
f2temp <- function(x){5*(dnorm(2*(x)))}
f2 <- function(x) f2temp(x)-f2temp(0)
beta3 <- 0
sigma0 <- 2 #2 # random intercept sd
sigma3 <- 1 # random slope sd
rho <- 0.5 # correlation between random intercept and slope
K = 200
Nk = 10
sigma0 = 2
sigma3 = 1
rho = 0.5
trueSigma <- matrix(c(sigma0^2,
rho*sigma0*sigma3,rho*sigma0*sigma3,
sigma3^2),nrow=2,ncol=2)
## generate data
x1 <- round(runif(K*Nk,-1,1),3)
x3 <- round(runif(K*Nk,-1,1),3)
x2 <- round(runif(K*Nk,-1,1),3)
dat <- get_data_mam(trueSigma,x1,x2,x3,K,Nk)
gridlen=100
dat2pred <- data.frame(x1 = c(seq(-1,1,length=gridlen),rep(0,2*gridlen)),
x2 = c(rep(0,gridlen),seq(-1,1,length=gridlen),rep(0,gridlen)),
x3 = c(rep(0,2*gridlen),seq(-1,1,length=gridlen)))
dat2pred$fx1 <- f1(dat2pred$x1)
dat2pred$fx2 <- f2(dat2pred$x2)
View(dfplotF_mam)
View(dat2pred)
dat2pred$fx1 <- f1(dat2pred$x1)
dat2pred$fx2 <- f2(dat2pred$x2)
model <- brm(bf(y ~  x3 + s(x1) + s(x2) + (1+x3|id)),
data = dat, family = "bernoulli", cores = 2, seed = 17,
warmup = 1000, iter = 2000, chains = 4, refresh=0, backend = "cmdstanr")
source("marginalcoef.R")
mc <- marginalcoef(object = model, preddat = dat2pred, CI = 0.95, posterior = T)
themam <- mam::mam(smooth = list(s(x1),s(x2)),
re = y ~ (1+x3|id),
fe = ~ x3,
dat = dat,
margdat = dat,
preddat = dat2pred ,
control = mam_control(
method = 'trust',
varmethod = 1,
verbose = FALSE,
retcond = TRUE))
## predicted
dat2pred_x1 <- filter(dat2pred,x2==0,x3==0)
frame <- data.frame(BMAM = apply(mc$smooth_pred$f1, 1, mean),
fx1 = dat2pred_x1$fx1,
x1 = dat2pred_x1$x1)
dat2pred_x1
dat2pred_x1$fx1
dat2pred_x1$x1
(themam$mam$fitted)
## predicted
dat2pred_results <- cbind(dat2pred, mc$Predicted_Summary$M, themam$mam$fitted)
names(dat2pred_results)
names(dat2pred_results)[6:7]
names(dat2pred_results)[6:7] <- c("BMAM", "MAM")
dat2pred_results_x1 <- filter(dat2pred,x2==0,x3==0)
dat2pred_results_x1$x1
ggplot(dat2pred_results_x1, aes(x=x1,y=BMAM)) +
geom_line(colour = "red") +
geom_line(colour = "blue", aes(x=x1,y=MAM)) +
geom_line(colour = "black", aes(x=x1,y=fx1))
dat2pred_results_x1
names(dat2pred_results)[6:7] <- c("BMAM", "MAM")
names(dat2pred_results)
dat2pred_results_x1 <- filter(dat2pred_results,x2==0,x3==0)
ggplot(dat2pred_results_x1, aes(x=x1,y=BMAM)) +
geom_line(colour = "red") +
geom_line(colour = "blue", aes(x=x1,y=MAM)) +
geom_line(colour = "black", aes(x=x1,y=fx1))
ggplot(dat2pred_results_x1, aes(x=x1,y=BMAM)) +
geom_line(colour = "red") +
geom_line(colour = "blue", aes(x=x1,y=MAM)) +
geom_line(colour = "black", aes(x=x1,y=fx1)) +
scale_color_manual(values = colors)
colors <- c("BMAM" = "red", "MAM" = "blue", "Fx1" = "black")
ggplot(dat2pred_results_x1, aes(x=x1)) +
geom_line(aex(y=BMAM, colour = "BMAM")) +
geom_line(aes(y=MAM, colour = "MAM")) +
geom_line(aes(y=fx1, colour = "Fx1")) +
scale_color_manual(values = colors)
ggplot(dat2pred_results_x1, aes(x=x1)) +
geom_line(aes(y=BMAM, colour = "BMAM")) +
geom_line(aes(y=MAM, colour = "MAM")) +
geom_line(aes(y=fx1, colour = "Fx1")) +
scale_color_manual(values = colors)
ggplot(dat2pred_results_x1, aes(x=x1)) +
geom_line(aes(y=BMAM, colour = "BMAM")) +
geom_line(aes(y=MAM, colour = "MAM")) +
geom_line(aes(y=fx1, colour = "Fx1")) +
scale_color_manual(values = colors) + labs(color = "")
ggplot(dat2pred_results_x1, aes(x=x1)) +
geom_line(aes(y=BMAM, colour = "BMAM")) +
geom_line(aes(y=MAM, colour = "MAM")) +
geom_line(aes(y=fx1, colour = "Fx1")) +
scale_color_manual(values = colors) + labs(color = "", x="X1")
ggplot(dat2pred_results_x1, aes(x=x1)) +
geom_line(aes(y=BMAM, colour = "BMAM")) +
geom_line(aes(y=MAM, colour = "MAM")) +
geom_line(aes(y=fx1, colour = "Fx1")) +
scale_color_manual(values = colors) + labs(color = "", x="X1", y = "f(X1)")
dat2pred_results_plot <- filter(dat2pred_results,x2==0,x3==0)
colors <- c("BMAM" = "red", "MAM" = "blue", "Fx1" = "black")
ggplot(dat2pred_results_plot, aes(x=x1)) +
geom_line(aes(y=BMAM, colour = "BMAM")) +
geom_line(aes(y=MAM, colour = "MAM")) +
geom_line(aes(y=fx1, colour = "Fx1")) +
scale_color_manual(values = colors) + labs(color = "", x="X1", y = "f(X1)")
dat2pred_results_plot <- filter(dat2pred_results,x1==0,x3==0)
colors <- c("BMAM" = "red", "MAM" = "blue", "Fx1" = "black")
ggplot(dat2pred_results_plot, aes(x=x1)) +
geom_line(aes(y=BMAM, colour = "BMAM")) +
geom_line(aes(y=MAM, colour = "MAM")) +
geom_line(aes(y=fx1, colour = "Fx1")) +
scale_color_manual(values = colors) + labs(color = "", x="X2", y = "f(X2)")
dat2pred_results_plot <- filter(dat2pred_results,x1==0,x3==0)
colors <- c("BMAM" = "red", "MAM" = "blue", "Fx1" = "black")
ggplot(dat2pred_results_plot, aes(x=x2)) +
geom_line(aes(y=BMAM, colour = "BMAM")) +
geom_line(aes(y=MAM, colour = "MAM")) +
geom_line(aes(y=fx1, colour = "Fx1")) +
scale_color_manual(values = colors) + labs(color = "", x="X2", y = "f(X2)")
dat2pred_results_plot <- filter(dat2pred_results,x1==0,x3==0)
colors <- c("BMAM" = "red", "MAM" = "blue", "Fx1" = "black")
ggplot(dat2pred_results_plot, aes(x=x2)) +
geom_line(aes(y=BMAM, colour = "BMAM")) +
geom_line(aes(y=MAM, colour = "MAM")) +
geom_line(aes(y=fx2, colour = "Fx1")) +
scale_color_manual(values = colors) + labs(color = "", x="X2", y = "f(X2)")
View(mc)
View(mc[["Summary"]][["M"]])
mc[["Summary"]][["M"]]
View(mc[["Summary"]])
View(beaverspred)
#   margdat = beavers,
#   preddat = beaverspred,
#   control = mam_control(
#     centered=TRUE,
#     method = 'trust',
#     varmethod = 1,
#     verbose = TRUE,
#     retcond = TRUE
#   )
# )
source("marginalcoef.R")
mc <- marginalcoef(object = brms_model, preddat = beaverspred, CI = 0.95, posterior = T)
mc <- marginalcoef(object = brms_model, preddat = beaverspred, CI = 0.95, posterior = T)
X
mc <- marginalcoef(object = brms_model, preddat = beaverspred, CI = 0.95, posterior = T)
head(pred_X)
View(out$Summary)
Predicted
dim(pred_B)
View(pred_B)
mc <- marginalcoef(object = brms_model, preddat = beaverspred, CI = 0.95, posterior = T)
View(mc)
View(mc$Summary)
## Model ----
# Create the prediction data
beaverspred <- data.frame(time=rep(seq(min(beavers$time),max(beavers$time),length=100),2),
timeM=c(seq(min(beavers$time),max(beavers$time),length=100),rep(0,100)),
timeF=c(rep(0,100),seq(min(beavers$time),max(beavers$time),length=100)),
year=factor(levels(beavers$year)[1],levels=levels(beavers$year)),
sex=factor(rep(c("M","F"),each=100),levels=levels(beavers$sex)))
mc <- marginalcoef(object = brms_model, preddat = beaverspred, CI = 0.95, posterior = T)
View(mc)
### plot ##################
GGPLOTTEXTSIZE <- 26
PLOTWIDTH <- PLOTHEIGHT <- 7
myrange=c(-2,3.2)
theme_set(theme_bw())
dfplotF_mam <- data.frame(time=beaverspred$time[101:200],
fitted=mc$Predicted_Summary$M[101:200],
uci=mc$Predicted_Summary$UL[101:200],
lci=mc$Predicted_Summary$LL[101:200])
dfplotM_mam <- data.frame(time=beaverspred$time[1:100],
fitted=mc$Predicted_Summary$M[1:100],
uci=mc$Predicted_Summary$UL[1:100],
lci=mc$Predicted_Summary$LL[1:100])
ggF <- ggplot(data=dfplotF_mam,aes(x=time,y=fitted))+
geom_ribbon(aes(ymin=lci,ymax=uci),fill="gray",alpha=0.65)+
geom_line()+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Female") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggF
mc$Predicted_Summary$M[1:100]
mc$Predicted_Summary$M[101:200]
dat2pred
View(pred_B)
View(dat2pred)
beaverspred <- select(beaverspred, -time)
beaverspred <- select(beaverspred, -time, -sex)
## Model ----
# Create the prediction data
beaverspred <- data.frame(time=rep(seq(min(beavers$time),max(beavers$time),length=100),2),
timeM=c(seq(min(beavers$time),max(beavers$time),length=100),rep(0,100)),
timeF=c(rep(0,100),seq(min(beavers$time),max(beavers$time),length=100)),
year=factor(levels(beavers$year)[1],levels=levels(beavers$year)),
sex=factor(rep(c("M","F"),each=100),levels=levels(beavers$sex)))
beaverspred <- select(beaverspred, -time, -sex)
mc <- marginalcoef(object = brms_model, preddat = beaverspred, CI = 0.95, posterior = T)
### plot ##################
GGPLOTTEXTSIZE <- 26
PLOTWIDTH <- PLOTHEIGHT <- 7
myrange=c(-2,3.2)
theme_set(theme_bw())
dfplotF_mam <- data.frame(time=beaverspred$time[101:200],
fitted=mc$Predicted_Summary$M[101:200],
uci=mc$Predicted_Summary$UL[101:200],
lci=mc$Predicted_Summary$LL[101:200])
dfplotM_mam <- data.frame(time=beaverspred$time[1:100],
fitted=mc$Predicted_Summary$M[1:100],
uci=mc$Predicted_Summary$UL[1:100],
lci=mc$Predicted_Summary$LL[1:100])
GGPLOTTEXTSIZE <- 26
PLOTWIDTH <- PLOTHEIGHT <- 7
myrange=c(-2,3.2)
theme_set(theme_bw())
mc$Predicted_Summary$M[101:200]
mc <- marginalcoef(object = brms_model, preddat = beaverspred, CI = 0.95, posterior = T)
View(B)
View(pred_B)
pred_B <- cbind(pred_X, pred_Xs, pred_Zs)
View(pred_B)
View(standata)
trace(mam, edit=T)
themam <- mam::mam(smooth = list(s(x1),s(x2)),
re = y ~ (1+x3|id),
fe = ~ x3,
dat = dat,
margdat = dat,
preddat = dat2pred ,
control = mam_control(
method = 'trust',
varmethod = 1,
verbose = FALSE,
retcond = TRUE))
View(themam$Xpred)
source("marginalcoef.R")
## Model ----
# Create the prediction data
beaverspred <- data.frame(time=rep(seq(min(beavers$time),max(beavers$time),length=100),2),
timeM=c(seq(min(beavers$time),max(beavers$time),length=100),rep(0,100)),
timeF=c(rep(0,100),seq(min(beavers$time),max(beavers$time),length=100)),
year=factor(levels(beavers$year)[1],levels=levels(beavers$year)),
sex=factor(rep(c("M","F"),each=100),levels=levels(beavers$sex)))
source("marginalcoef.R")
mc <- marginalcoef(object = brms_model, centered = TRUE, preddat = beaverspred, CI = 0.95, posterior = T)
### plot ##################
GGPLOTTEXTSIZE <- 26
PLOTWIDTH <- PLOTHEIGHT <- 7
myrange=c(-2,3.2)
theme_set(theme_bw())
dfplotF_mam <- data.frame(time=beaverspred$time[101:200],
fitted=mc$Predicted_Summary$M[101:200],
uci=mc$Predicted_Summary$UL[101:200],
lci=mc$Predicted_Summary$LL[101:200])
dfplotM_mam <- data.frame(time=beaverspred$time[1:100],
fitted=mc$Predicted_Summary$M[1:100],
uci=mc$Predicted_Summary$UL[1:100],
lci=mc$Predicted_Summary$LL[1:100])
ggF <- ggplot(data=dfplotF_mam,aes(x=time,y=fitted))+
geom_ribbon(aes(ymin=lci,ymax=uci),fill="gray",alpha=0.65)+
geom_line()+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Female") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggF
GGPLOTTEXTSIZE
### plot ##################
GGPLOTTEXTSIZE <- 15
PLOTWIDTH <- PLOTHEIGHT <- 7
ggF <- ggplot(data=dfplotF_mam,aes(x=time,y=fitted))+
geom_ribbon(aes(ymin=lci,ymax=uci),fill="gray",alpha=0.65)+
geom_line()+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Female") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggF <- ggplot(data=dfplotF_mam,aes(x=time,y=fitted))+
geom_ribbon(aes(ymin=lci,ymax=uci),fill="gray",alpha=0.65)+
geom_line()+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Female") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggF
ggM <- ggplot(data=dfplotM_mam,aes(x=time,y=fitted-1))+
geom_ribbon(aes(ymin=lci-1,ymax=uci-1),fill="gray",alpha=0.65)+
geom_line()+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Male") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggM
untrace(mam)
bv.mam <- mam(
smooth = list(s(timeF),s(timeM)),
re = y ~ (sex0-1|id)+(sex1-1|id),
fe=~year,#+sex
dat = beavers,
margdat = beavers,
preddat = beaverspred,
control = mam_control(
centered=TRUE,
method = 'trust',
varmethod = 1,
verbose = TRUE,
retcond = TRUE
)
)
##
dfplotF_Bmam <- data.frame(time=beaverspred$time[101:200],
fitted=mc$Predicted_Summary$M[101:200],
uci=mc$Predicted_Summary$UL[101:200],
lci=mc$Predicted_Summary$LL[101:200])
dfplotM_Bmam <- data.frame(time=beaverspred$time[1:100],
fitted=mc$Predicted_Summary$M[1:100],
uci=mc$Predicted_Summary$UL[1:100],
lci=mc$Predicted_Summary$LL[1:100])
rep(beaverspred$time[101:200],2)
## data prepare
bv.mam.uci <- bv.mam$mam$fitted+1.96*bv.mam$mam$fitted_se
bv.mam.lci <- bv.mam$mam$fitted-1.96*bv.mam$mam$fitted_se
dfplotF <- data.frame(time = rep(beaverspred$time[101:200],2),
fitted = c(mc$Predicted_Summary$M[101:200],bv.mam$mam$fitted[101:200]),
uci = c(mc$Predicted_Summary$UL[101:200], bv.mam.uci[101:200]),
lci = c(mc$Predicted_Summary$LL[101:200], bv.mam.lci[101:200]))
dfplotM <- data.frame(time = rep(beaverspred$time[1:100],2),
fitted = c(mc$Predicted_Summary$M[1:100],bv.mam$mam$fitted[1:100]),
uci = c(mc$Predicted_Summary$UL[1:100], bv.mam.uci[1:100]),
lci = c(mc$Predicted_Summary$LL[1:100], bv.mam.lci[1:100]))
rep(c("BMAM", "MAM"), each = 100)
dfplotF <- data.frame(time = rep(beaverspred$time[101:200],2),
fitted = c(mc$Predicted_Summary$M[101:200],bv.mam$mam$fitted[101:200]),
uci = c(mc$Predicted_Summary$UL[101:200], bv.mam.uci[101:200]),
lci = c(mc$Predicted_Summary$LL[101:200], bv.mam.lci[101:200]),
method = rep(c("BMAM", "MAM"), each = 100))
dfplotM <- data.frame(time = rep(beaverspred$time[1:100],2),
fitted = c(mc$Predicted_Summary$M[1:100],bv.mam$mam$fitted[1:100]),
uci = c(mc$Predicted_Summary$UL[1:100], bv.mam.uci[1:100]),
lci = c(mc$Predicted_Summary$LL[1:100], bv.mam.lci[1:100]),
method = rep(c("BMAM", "MAM"), each = 100))
ggplot(data=dfplotF,aes(x=time,y=fitted, group=method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=method),alpha=0.65)+
geom_line(aes(colour = method))
ggF <- ggplot(data=dfplotF,aes(x=time,y=fitted, group=method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=method),alpha=0.3)+
geom_line(aes(colour = method))+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Female") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggF
ggM <- gplot(data=dfplotM,aes(x=time,y=fitted, group=method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=method),alpha=0.3)+
geom_line(aes(colour = method))+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Male") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggM <- ggplot(data=dfplotM,aes(x=time,y=fitted, group=method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=method),alpha=0.3)+
geom_line(aes(colour = method))+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Male") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggM
ggM <- ggplot(data=dfplotM,aes(x=time,y=fitted, group=method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=method, colour= method),alpha=0.3)+
geom_line(aes(colour = method))+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Male") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggM
ggM <- ggplot(data=dfplotM,aes(x=time,y=fitted, group=method))+
geom_ribbon(aes(ymin=lci,ymax=uci, colour= method),alpha=0.3)+
geom_line(aes(colour = method))+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Male") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggM
ggM <- ggplot(data=dfplotM,aes(x=time,y=fitted, group=method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=method, colour= method),alpha=0.3)+
geom_line(aes(colour = method))+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Male") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggM
ggF <- ggplot(data=dfplotF,aes(x=time,y=fitted, group=method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=method, colour= method),alpha=0.3)+
geom_line(aes(colour = method))+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Female") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggF
ggF
ggM
ggF
ggF
ggM
bv.mam$mam$fitted_se
View(mc)
mc <- marginalcoef(object = brms_model, centered = TRUE, preddat = beaverspred, CI = 0.95, CIType="ETI", posterior = T)
View(mc)
### plot ##################
GGPLOTTEXTSIZE <- 15
PLOTWIDTH <- PLOTHEIGHT <- 7
myrange=c(-2,3.2)
theme_set(theme_bw())
theme_replace(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## data prepare
bv.mam.uci <- bv.mam$mam$fitted+1.96*bv.mam$mam$fitted_se
bv.mam.lci <- bv.mam$mam$fitted-1.96*bv.mam$mam$fitted_se
dfplotF <- data.frame(time = rep(beaverspred$time[101:200],2),
fitted = c(mc$Predicted_Summary$M[101:200],bv.mam$mam$fitted[101:200]),
uci = c(mc$Predicted_Summary$UL[101:200], bv.mam.uci[101:200]),
lci = c(mc$Predicted_Summary$LL[101:200], bv.mam.lci[101:200]),
method = rep(c("BMAM", "MAM"), each = 100))
dfplotM <- data.frame(time = rep(beaverspred$time[1:100],2),
fitted = c(mc$Predicted_Summary$M[1:100],bv.mam$mam$fitted[1:100]),
uci = c(mc$Predicted_Summary$UL[1:100], bv.mam.uci[1:100]),
lci = c(mc$Predicted_Summary$LL[1:100], bv.mam.lci[1:100]),
method = rep(c("BMAM", "MAM"), each = 100))
ggF <- ggplot(data=dfplotF,aes(x=time,y=fitted, group=method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=method, colour= method),alpha=0.3)+
geom_line(aes(colour = method))+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Female") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggF
ggM <- ggplot(data=dfplotM,aes(x=time,y=fitted, group=method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=method, colour= method),alpha=0.3)+
geom_line(aes(colour = method))+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Male") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggM

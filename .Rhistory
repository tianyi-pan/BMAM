ggx2
combined <- ggx1 + ggx2 & theme(legend.position = "right")
gg_combined <- combined + plot_layout(guides = "collect")  # combine two plots
gg_combined
## save plots
ggsave(filename = file.path(paste0('figures/fullbayes-r(k=100)-simulation-combined', 'K = ', as.character(K),
'Nk = ', as.character(Nk), '.pdf')),
plot = gg_combined,
width=2*PLOTWIDTH,height=PLOTHEIGHT)
mc.T <- marginalcoef(object = model_brms, fullbayesian = T,
k=500, preddat = dat2pred,CIType="ETI", CI = 0.95, posterior = T)
### plot ##################
## plot set up
library(gridExtra)
library(patchwork)
GGPLOTTEXTSIZE <- 15
PLOTWIDTH <- PLOTHEIGHT <- 7
myrange=c(-3,2.5)
theme_set(theme_bw())
theme_replace(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## data prepare
themam.uci <- themam$mam$fitted+1.96*themam$mam$fitted_se
themam.lci <- themam$mam$fitted-1.96*themam$mam$fitted_se
dfplotfx1 <- data.frame(x = rep(dat2pred$x1[1:100],3),
fitted = c(mc.T$Predicted_Summary$M[1:100],mc.F$Predicted_Summary$M[1:100], themam$mam$fitted[1:100]),
uci = c(mc.T$Predicted_Summary$UL[1:100],mc.F$Predicted_Summary$UL[1:100], themam.uci[1:100]),
lci = c(mc.T$Predicted_Summary$LL[1:100],mc.F$Predicted_Summary$LL[1:100], themam.lci[1:100]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
dfplotfx2 <- data.frame(x = rep(dat2pred$x2[101:200],3),
fitted = c(mc.T$Predicted_Summary$M[101:200],mc.F$Predicted_Summary$M[101:200], themam$mam$fitted[101:200]),
uci = c(mc.T$Predicted_Summary$UL[101:200],mc.F$Predicted_Summary$UL[101:200], themam.uci[101:200]),
lci = c(mc.T$Predicted_Summary$LL[101:200],mc.F$Predicted_Summary$LL[101:200], themam.lci[101:200]),
Method = rep(c("BMAM Fully","BMAM", "MAM"), each = 100))
## plot
ggx1 <- ggplot(data=dfplotfx1,aes(x=x,y=fitted, group=Method))+
# geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.1, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx1[1:100],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[1]))+
ylab(expression(f~(X[1])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx1
ggx2 <- ggplot(data=dfplotfx2,aes(x=x,y=fitted, group=Method))+
# geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
geom_line(aes(y=rep(dat2pred$fx2[101:200],3)), size = 1, lty = "dashed")+
ylim(myrange)+
xlab(expression(X[2]))+
ylab(expression(f~(X[2])))+
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggx2
combined <- ggx1 + ggx2 & theme(legend.position = "right")
gg_combined <- combined + plot_layout(guides = "collect")  # combine two plots
gg_combined
## save plots
ggsave(filename = file.path(paste0('figures/fullbayes-r(k=500)-simulation-combined', 'K = ', as.character(K),
'Nk = ', as.character(Nk), '.pdf')),
plot = gg_combined,
width=2*PLOTWIDTH,height=PLOTHEIGHT)
## import libraries
library(mam)
library(mgcv)
library(ggplot2)
library(mgcv)
library(brms)
library(data.table)
library(brmsmargins)
library(dplyr)
source("marginalcoef.R")
source("prediction.R")
source("builder.R")
source("generate_pred.R")
source("integretere_fullbayesian.R")
source("plot.bmam.R")
data(beavers)
# Create Sex indicator variables. Change 0's to small nonzero value
# due to internal behaviour of lme4 and Matrix packages which convert data zeroes
# to structural zeroes. See https://github.com/lme4/lme4/issues/671
beavers$sex0 <- as.numeric(beavers$sex=="M");beavers$sex0[beavers$sex0==0] <- 0.0000001
beavers$sex1 <- as.numeric(beavers$sex=="F");beavers$sex1[beavers$sex1==0] <- 0.0000001
# Create the prediction data
beaverspred <- data.frame(time=rep(seq(min(beavers$time),max(beavers$time),length=100),2),
timeM=c(seq(min(beavers$time),max(beavers$time),length=100),rep(0,100)),
timeF=c(rep(0,100),seq(min(beavers$time),max(beavers$time),length=100)),
year=factor(levels(beavers$year)[1],levels=levels(beavers$year)),
sex=factor(rep(c("M","F"),each=100),levels=levels(beavers$sex)))
load("data/beavers_brms.rds")
## import libraries
library(mam)
library(mgcv)
library(ggplot2)
library(mgcv)
library(brms)
library(data.table)
library(brmsmargins)
library(dplyr)
source("marginalcoef.R")
source("prediction.R")
source("builder.R")
source("generate_pred.R")
source("integretere_fullbayesian.R")
source("plot.bmam.R")
data(beavers)
# Create Sex indicator variables. Change 0's to small nonzero value
# due to internal behaviour of lme4 and Matrix packages which convert data zeroes
# to structural zeroes. See https://github.com/lme4/lme4/issues/671
beavers$sex0 <- as.numeric(beavers$sex=="M");beavers$sex0[beavers$sex0==0] <- 0.0000001
beavers$sex1 <- as.numeric(beavers$sex=="F");beavers$sex1[beavers$sex1==0] <- 0.0000001
# Create the prediction data
beaverspred <- data.frame(time=rep(seq(min(beavers$time),max(beavers$time),length=100),2),
timeM=c(seq(min(beavers$time),max(beavers$time),length=100),rep(0,100)),
timeF=c(rep(0,100),seq(min(beavers$time),max(beavers$time),length=100)),
year=factor(levels(beavers$year)[1],levels=levels(beavers$year)),
sex=factor(rep(c("M","F"),each=100),levels=levels(beavers$sex)))
load("data/beavers_brms.rds")
beaverspred <- generate_pred(brms_model, length = 100)
mc <- marginalcoef(object = model_brms, fullbayesian = T,
k=100, preddat = dat2pred,CIType="ETI", CI = 0.95, posterior = T)
load("data/beavers_brms.rds")
mc <- marginalcoef(object = model_brms, fullbayesian = T,
k=100, preddat = dat2pred,CIType="ETI", CI = 0.95, posterior = T)
beaverspred
mc <- marginalcoef(object = brms_model, fullbayesian = T,
k=100, preddat = dat2pred,CIType="ETI", CI = 0.95, posterior = T)
# mc <- marginalcoef(object = brms_model, fullbayesian = F, centered = TRUE,
#                    CI = 0.95, CIType="ETI", posterior = T)
# save(mc, file="data/mc.rds")
# load("data/mc.rds")
## type of CI: Can be 'ETI' (default), 'HDI', 'BCI', 'SPI' or 'SI'.
## https://easystats.github.io/bayestestR/reference/ci.html
## MAM
bv.mam <- mam(
smooth = list(s(timeF),s(timeM)),
re = y ~ (sex0-1|id)+(sex1-1|id),
fe=~year,#+sex
dat = beavers,
margdat = beavers,
preddat = beaverspred,
control = mam_control(
centered=TRUE,
method = 'trust',
varmethod = 1,
verbose = TRUE,
retcond = TRUE
)
)
### plot ##################
## plot set up
library(gridExtra)
library(patchwork)
GGPLOTTEXTSIZE <- 15
PLOTWIDTH <- PLOTHEIGHT <- 7
myrange=c(-2,3.2)
theme_set(theme_bw())
theme_replace(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## plot using plot.bmam function
## TO DO: change object as a S3 class! plot(mc)
# gg <- plot.bmam(mc)
## we can add other elements (or set up) outside the function
# gg[[1]] + ggtitle("test")
## data prepare
bv.mam.uci <- bv.mam$mam$fitted+1.96*bv.mam$mam$fitted_se
bv.mam.lci <- bv.mam$mam$fitted-1.96*bv.mam$mam$fitted_se
dfplotF <- data.frame(time = rep(beaverspred$timeM[101:200],2),
fitted = c(mc$Predicted_Summary$M[101:200],bv.mam$mam$fitted[101:200]),
uci = c(mc$Predicted_Summary$UL[101:200], bv.mam.uci[101:200]),
lci = c(mc$Predicted_Summary$LL[101:200], bv.mam.lci[101:200]),
Method = rep(c("BMAM", "MAM"), each = 100))
dfplotM <- data.frame(time = rep(beaverspred$timeF[1:100],2),
fitted = c(mc$Predicted_Summary$M[1:100],bv.mam$mam$fitted[1:100]),
uci = c(mc$Predicted_Summary$UL[1:100], bv.mam.uci[1:100]),
lci = c(mc$Predicted_Summary$LL[1:100], bv.mam.lci[1:100]),
Method = rep(c("BMAM", "MAM"), each = 100))
## plot
ggF <- ggplot(data=dfplotF,aes(x=time,y=fitted, group=Method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Female") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggF
ggM <- ggplot(data=dfplotM,aes(x=time,y=fitted, group=Method))+
geom_ribbon(aes(ymin=lci,ymax=uci,fill=Method, colour= Method),alpha=0.2, size = 0.3)+
geom_line(aes(colour = Method), size = 1)+
ylim(myrange)+
xlab("Day of Year")+
ylab(expression(f^M~(time)))+
ggtitle("Male") +
theme(text = element_text(size = GGPLOTTEXTSIZE))
ggM
ggM_combined <- ggM + ylab("")
combined <- ggF + ggM_combined & theme(legend.position = "right")
gg_combined <- combined + plot_layout(guides = "collect")  # combine two plots
gg_combined
## save plots
ggsave(filename = file.path('figures/beaver-fully bayes-time-female.pdf'),plot = ggF,width=PLOTWIDTH,height=PLOTHEIGHT)
ggsave(filename = file.path('figures/beaver-fully bayes-time-male.pdf'),plot = ggM,width=PLOTWIDTH,height=PLOTHEIGHT)
ggsave(filename = file.path('figures/beaver-fully bayes-time-combined.pdf'),plot = gg_combined,width=2*PLOTWIDTH,height=PLOTHEIGHT)
## plot using plot.bmam function
## TO DO: change object as a S3 class! plot(mc)
gg <- plot.bmam(mc)
mc <- marginalcoef(object = brms_model, fullbayesian = F, centered = TRUE,
CI = 0.95, CIType="ETI", posterior = T)
## plot using plot.bmam function
## TO DO: change object as a S3 class! plot(mc)
gg <- plot.bmam(mc)
gg[[1]]
gg[[2]]
plot(mc)
## import libraries
library(mam)
library(mgcv)
library(ggplot2)
library(mgcv)
library(brms)
library(data.table)
library(brmsmargins)
library(dplyr)
source("bmam.R")
source("prediction.R")
source("generate_pred.R")
source("plot.bmam.R")
data(beavers)
# Create Sex indicator variables. Change 0's to small nonzero value
# due to internal behaviour of lme4 and Matrix packages which convert data zeroes
# to structural zeroes. See https://github.com/lme4/lme4/issues/671
beavers$sex0 <- as.numeric(beavers$sex=="M");beavers$sex0[beavers$sex0==0] <- 0.0000001
beavers$sex1 <- as.numeric(beavers$sex=="F");beavers$sex1[beavers$sex1==0] <- 0.0000001
## BMAM
if(FALSE){
## Don't run. Very slow. use load("data/beavers_brms.rds")
brms_model <- brm(bf(y ~ year + s(timeF) + s(timeM) + (sex0-1|id)+(sex1-1|id)),
data = beavers, family = "bernoulli", cores = 2, seed = 17,
warmup = 1000, iter = 2000, chains = 4,backend = "cmdstanr")
# save(brms_model,file="data/beavers_brms.rds")
}
load("data/beavers_brms.rds")
mc <- bmam(object = brms_model, centered = FALSE,
CI = 0.95, CIType="ETI", posterior = T)
beaverspred <- mc$Preddat
# Bayesian GAM
if(FALSE){
bgam <- brm(bf(y ~ year + s(timeF) + s(timeM)),
data = beavers, family = "bernoulli", cores = 4, seed = 17,
warmup = 1000, iter = 2000, chains = 4,backend = "cmdstanr")
}
# save(bgam, file = "data/bgam-beavers.rds")
load("data/bgam-beavers.rds")
## MAM
bv.mam <- mam(
smooth = list(s(timeF),s(timeM)),
re = y ~ (sex0-1|id)+(sex1-1|id),
fe=~year,#+sex
dat = beavers,
margdat = beavers,
preddat = beaverspred,
control = mam_control(
centered = FALSE,
method = 'trust',
varmethod = 1,
verbose = TRUE,
retcond = TRUE
)
)
## frequentist GAM
## Question: How to center?
gam <- gam(y ~ year + s(timeF) + s(timeM),
data=beavers,family=binomial(),method="REML")
### plot ##################
## plot set up
library(gridExtra)
library(patchwork)
GGPLOTTEXTSIZE <- 15
PLOTWIDTH <- PLOTHEIGHT <- 7
myrange=c(-2,3.2)
theme_set(theme_bw())
theme_replace(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## plot using plot.bmam function
## TO DO: change object as a S3 class! plot(mc)
gg <- plot.bmam(object = mc, compared.model = bv.mam, display = FALSE)
## save plots
gg1 <- gg$Both[[1]] + ylab("") + ggtitle("")
gg2 <- gg$Both[[2]] + ggtitle("")
combined <- gg2 + gg1 & theme(legend.position = "right")
gg_combined <- combined + plot_layout(guides = "collect")  # combine two plots
gg_combined
## plot using plot.bmam function
## TO DO: change object as a S3 class! plot(mc)
gg <- plot.bmam(object = mc, compared.model = bv.mam, display = FALSE)
## save plots
gg1 <- gg$Both[[1]] + ylab("") + ggtitle("")
gg2 <- gg$Both[[2]] + ggtitle("")
combined <- gg2 + gg1 & theme(legend.position = "right")
gg_combined <- combined + plot_layout(guides = "collect")  # combine two plots
gg_combined
ggsave(filename = file.path('figures/beaver-comparision-3.pdf'),plot = gg_combined,width=2*PLOTWIDTH,height=PLOTHEIGHT)
## plot using plot.bmam function
## TO DO: change object as a S3 class! plot(mc)
gg <- plot.bmam(object = mc, compared.model = bgam, display = FALSE)
## save plots
gg1 <- gg$Both[[1]] + ylab("") + ggtitle("")
gg2 <- gg$Both[[2]] + ggtitle("")
combined <- gg2 + gg1 & theme(legend.position = "right")
gg_combined <- combined + plot_layout(guides = "collect")  # combine two plots
gg_combined
ggsave(filename = file.path('figures/beaver-comparision-1.pdf'),plot = gg_combined,width=2*PLOTWIDTH,height=PLOTHEIGHT)
## plot using plot.bmam function
## TO DO: change object as a S3 class! plot(mc)
gg <- plot.bmam(object = mc, compared.model = gam, display = FALSE)
## save plots
gg1 <- gg$Both[[1]] + ylab("") + ggtitle("")
gg2 <- gg$Both[[2]] + ggtitle("")
combined <- gg2 + gg1 & theme(legend.position = "right")
gg_combined <- combined + plot_layout(guides = "collect")  # combine two plots
gg_combined
ggsave(filename = file.path('figures/beaver-comparision-2.pdf'),plot = gg_combined,width=2*PLOTWIDTH,height=PLOTHEIGHT)
usethis::use_vignette("my-vignette")
## import libraries
library(mam)
library(mgcv)
library(ggplot2)
library(mgcv)
library(brms)
library(data.table)
library(brmsmargins)
library(dplyr)
source("bmam.R")
source("prediction.R")
source("generate_pred.R")
source("plot.bmam.R")
data(beavers)
# Create Sex indicator variables. Change 0's to small nonzero value
# due to internal behaviour of lme4 and Matrix packages which convert data zeroes
# to structural zeroes. See https://github.com/lme4/lme4/issues/671
beavers$sex0 <- as.numeric(beavers$sex=="M");beavers$sex0[beavers$sex0==0] <- 0.0000001
beavers$sex1 <- as.numeric(beavers$sex=="F");beavers$sex1[beavers$sex1==0] <- 0.0000001
load("data/beavers_brms.rds")
mc <- bmam(object = brms_model, centered = FALSE,
CI = 0.95, CIType="ETI", posterior = T)
class(mc)
plot(mc)
source("~/Documents/Research/Bayesian MAM/BMAM/bmam.R")
mc <- bmam(object = brms_model, centered = FALSE,
CI = 0.95, CIType="ETI", posterior = T)
class(mc)
plot(mc)
View(mc)
mc$Summary
mc$Bname
mc$Summary_para
mc$Preddat
## MAM
bv.mam <- mam(
smooth = list(s(timeF),s(timeM)),
re = y ~ (sex0-1|id)+(sex1-1|id),
fe=~year,#+sex
dat = beavers,
margdat = beavers,
preddat = beaverspred,
control = mam_control(
centered = FALSE,
method = 'trust',
varmethod = 1,
verbose = TRUE,
retcond = TRUE
)
)
beaverspred <- mc$Preddat
## MAM
bv.mam <- mam(
smooth = list(s(timeF),s(timeM)),
re = y ~ (sex0-1|id)+(sex1-1|id),
fe=~year,#+sex
dat = beavers,
margdat = beavers,
preddat = beaverspred,
control = mam_control(
centered = FALSE,
method = 'trust',
varmethod = 1,
verbose = TRUE,
retcond = TRUE
)
)
bv.mam
## frequentist GAM
## Question: How to center?
gam <- gam(y ~ year + s(timeF) + s(timeM),
data=beavers,family=binomial(),method="REML")
gam
brms_model
brms_model$formula
brms_model$family
brms_model$version
source("~/Documents/Research/Bayesian MAM/BMAM/bmam.R")
mc <- bmam(object = brms_model, centered = FALSE,
CI = 0.95, CIType="ETI", posterior = T)
x <- mc
x$Family
cat(x$Formula, x$Family)
x$Formula
x$Family
class(x$Formula)
View(x$Formula)
cat(x$Family)
print(x$Family)
print.bmam <- function(x){
print(x$Formula)
print(x$Family)
invisible()
}
mc
print.bmam <- function(x){
print(x$Family)
print(x$Formula)
invisible()
}
mc
View(mc)
mc$Summary
mc$Summary[[mc$Bname]]
mc$Summary[mc$Bname]
mc$Summary[,mc$Bname]
mc$Summary$Label[mc$Bname]
mc$Summary$Label %in% mc$Bname
mc$Summary[,mc$Summary$Label %in% mc$Bname]
x$Summary[x$Summary$Label %in% x$Bname,]
x$Summary
View(x$Summary)
x$Summary$Label %in% x$Bname
x$Bname
x$Summary[x$Summary$Label %in% x$Bname[[1]],]
lapply(x$Bname, function(name){
x$Summary[x$Summary$Label %in% name,]
})
lapply(x$Bname, function(name){
x$Summary[x$Summary$Label %in% name,] %>% select(Label,M,Mdn,LL,UL,CI,CIType)
})
smooth_para <- lapply(x$Bname, function(name){
x$Summary[x$Summary$Label %in% name,] %>% select(Label,M,Mdn,LL,UL,CI,CIType)
})
x$Bname
smooth_est <- lapply(x$Bname, function(name){
x$Summary[x$Summary$Label %in% name,] %>% select(Label,M,Mdn,LL,UL,CI,CIType)
})
x$Formula
x$Formula[[1]]
View(x$Formula)
smterm <- brmsterms(x$formula)$dpars$mu$sm # smooth term
x$formula
smterm <- brmsterms(x$Formula)$dpars$mu$sm # smooth term
smterm
smvariable <- lapply(smterm[[2]][-1], function(term.) term.[[2]]) # variable for smooth term
smvariable
View(smterm)
smterm[[2]][-1]
smterm[[2]][-1][[1]]
smterm[[2]][-1][[2]]
names(smooth_est) <- smterm[[2]][-1]
smterm[[2]][-1]
names(smooth_est) <- as.vector(smterm[[2]][-1])
as.vector(smterm[[2]][-1])
names(smooth_est)
smterm[[2]][-1]
View(smterm[[2]][-1])
as.character(smterm[[2]][-1])
names(smooth_est) <- as.character(smterm[[2]][-1])
smooth_est
print(x)
lapply(smooth_est, print)
smooth_est
lapply(smooth_est, print())
lapply(smooth_est, print)
smooth_est$`s(timeF)`
print(x)
lapply(smooth_est, function(est){
print(names(est))
print(est)
})
print(smooth_est)
source("~/Documents/Research/Bayesian MAM/BMAM/summary.R")
x
source("~/Documents/Research/Bayesian MAM/BMAM/summary.R")
x
print.bmam <- function(x){
print(x$Family)
print(x$Formula)
cat("\n")
print(summary(x))
invisible()
}
x
summary(x)
source("summary.R")
bmam <- bmam(object = brms_model, centered = FALSE,
CI = 0.95, CIType="ETI", posterior = T)
bmam
source("~/Documents/Research/Bayesian MAM/BMAM/summary.R")
bmam
bmam
source("R/bmam.R")
source("R/prediction.R")
source("R/generate_pred.R")
source("R/plot.bmam.R")
source("R/summary.R")
View(mc)
4L
L
?L

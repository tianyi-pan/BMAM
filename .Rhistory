n <- expand.grid(Block = block)
n[, sprintf("J_%d", Block)]
}
stopifnot(is.data.table(data))
data
n <- .namesJ(block)
block
n <- expand.grid(Block = block)
print(n)
n[, sprintf("J_%d", Block)]
n <- sprintf("J_%d", block)
data[n]
do.call(cbind, data[n])
data[n]
as.matrix(data[n])
data[n]
do.call(cbind, data[n])
as.matrix(do.call(cbind, data[n]))
.buildJ <- function(data, block) {
n <- sprintf("J_%d", block)
as.matrix(do.call(cbind, data[n]))
}
J <- vector("list",nblocks)
i
J[[i]] <- .buildJ(dtmp, useblock)
J[[i]]
unique(J[[i]])
n <- expand.grid(Block = block,
J = J,
Coef = usecoef,
Group = usegroup)
print(n)
as.vector(J)
J[,1]
J
View(J)
data[n]
n <- sprintf("J_%d", block)
data[n]
.buildJ <- function(data, block) {
n <- sprintf("J_%d", block)
data[n]
}
J[[i]] <- .buildJ(dtmp, useblock)
J = J[[i]]
J
J
n <- expand.grid(Block = block,
J = J,
Coef = usecoef,
Group = usegroup)
n <- as.data.table(n)
J
print(n)
J
unique(J)
unique(J)
J[[1]]
unique(J[[1]])
ttt <- unique(J[[1]])
id <- unique(J[[1]])
n <- expand.grid(Block = block,
ID = id,
Coef = usecoef,
Group = usegroup)
print(n)
n[, sprintf("r_%s[%d,%s]",
Group, ID, Coef)]
n <- expand.grid(ID = id,
Coef = usecoef,
Group = usegroup)
n <- as.data.table(n)
n <- as.data.table(n)
n[, sprintf("r_%s[%d,%s]",
Group, ID, Coef)]
.namesr <- function(block, id, usecoef, usegroup) {
n <- expand.grid(ID = id,
Coef = usecoef,
Group = usegroup)
n <- as.data.table(n)
n[, sprintf("r_%s[%d,%s]",
Group, ID, Coef)]
}
n <- .namesr(id, usecoef, usegroup)
usecoef
usegroup
.namesr <- function(id, usecoef, usegroup) {
n <- expand.grid(ID = id,
Coef = usecoef,
Group = usegroup)
n <- as.data.table(n)
n[, sprintf("r_%s[%d,%s]",
Group, ID, Coef)]
}
n <- .namesr(id, usecoef, usegroup)
out <- as.matrix(data[, ..n])
.buildr <- function(data, id, usecoef,usegroup) {
stopifnot(is.data.table(data))
id <- unique(id)
n <- .namesr(id, usecoef, usegroup)
out <- as.matrix(data[, ..n])
return(out)
}
.namesr <- function(id, usecoef, usegroup) {
n <- expand.grid(ID = id,
Coef = usecoef,
Group = usegroup)
n <- as.data.table(n)
n[, sprintf("r_%s[%d,%s]",
Group, ID, Coef)]
}
.buildr <- function(data, id, usecoef,usegroup) {
stopifnot(is.data.table(data))
id <- unique(id)
n <- .namesr(id, usecoef, usegroup)
out <- as.matrix(data[, ..n])
return(out)
}
.buildJ <- function(data, block) {
n <- sprintf("J_%d", block)
data[n]
}
r <- vector("list",nblocks)
nblocks
nblocks <- length(blocks)
blocks <- unique(re$id)
source("builder.R")
source("prediction.R")
mc <- marginalcoef(object = brms_model, centered = TRUE, preddat = beaverspred, CI = 0.95, CIType="ETI", posterior = T)
source("marginalcoef.R")
source("prediction.R")
source("builder.R")
mc <- marginalcoef(object = brms_model, centered = TRUE, preddat = beaverspred, CI = 0.95, CIType="ETI", posterior = T)
mc <- marginalcoef(object = brms_model, centered = TRUE, preddat = beaverspred, CI = 0.95, CIType="ETI", posterior = T)
usegroup
.buildJ(dtmp, useblock)
J[[i]] <- .buildJ(dtmp, useblock)
r[[i]] <- .buildr(data = post, id = J[[i]], usecoef,usegroup)
.buildr(data = post, id = J[[i]], usecoef,usegroup)
names(post)
usecoef
usecoef
usegroup
id
r[[i]] <- .buildr(data = post, id = J[[i]], usecoef,usegroup)
data = post
id = J[[i]]
stopifnot(is.data.table(data))
id <- unique(id)
id
unique(id)
J[[i]]
id[[1]]
id <- unique(id[[1]])
id
n <- .namesr(id, usecoef, usegroup)
print(n)
out <- as.matrix(data[, ..n])
dim*out
dim(out)
View(out)
.buildr <- function(data, id, usecoef,usegroup) {
stopifnot(is.data.table(data))
id <- unique(id[[1]])
n <- .namesr(id, usecoef, usegroup)
out <- as.matrix(data[, ..n])
return(out)
}
.buildJ <- function(data, block) {
n <- sprintf("J_%d", block)
data[n]
}
J[[i]] <- .buildJ(dtmp, useblock)
r[[i]] <- .buildr(data = post, id = J[[i]], usecoef,usegroup)
J[[i]]
dim(J[[i]])
dim(J[[i]][[1]])
.buildJ(dtmp, useblock)
.buildJ(dtmp, useblock)[[1]]
J[[i]] <- .buildJ(dtmp, useblock)[[1]]
r[[i]] <- .buildr(data = post, id = J[[i]], usecoef,usegroup)
.buildr <- function(data, id, usecoef,usegroup) {
stopifnot(is.data.table(data))
id <- unique(id)
n <- .namesr(id, usecoef, usegroup)
out <- as.matrix(data[, ..n])
return(out)
}
J[[i]] <- .buildJ(dtmp, useblock)[[1]]
r[[i]] <- .buildr(data = post, id = J[[i]], usecoef,usegroup)
dim(J[[i]])
data[, ..n]
as.list(data[, ..n])
data[, ..n]
do.call(as.list,data[, ..n])
as.list(out)
out <- as.matrix(data[, ..n])
as.list(out)
View(out)
out <- as.data.frame(data[, ..n])
as.list(out)
out <- as.list(out)
View(out)
.buildr <- function(data, id, usecoef,usegroup) {
stopifnot(is.data.table(data))
id <- unique(id)
n <- .namesr(id, usecoef, usegroup)
out <- as.data.frame(data[, ..n])
as.list(out)
}
r[[i]] <- .buildr(data = post, id = J[[i]], usecoef,usegroup)
r[[i]]
r[[i]][[1]]
r[[i]][[34]]
r[[i]][[35]]
r[[i]][[34]]
J[[i]]
unique(J[[i]])
d2[[i]] <- brmsmargins:::.buildZ(data = dtmp, block = useblock, number = num, dpar = dpar)
d2[[i]]
unique(J[[i]])
which(unique(J[[i]])==1)
which(unique(J[[i]])==3)
J_index <- which(unique(J[[i]])==j.)
j. == 1
j. = 1
J_index <- which(unique(J[[i]])==j.)
J[[i]][[J_index]]
J[[i]]
r[[i]][[J_index]]
J[[i]]
dim(J[[i]])
r_index <- which(unique(J[[i]])==j.)
d2[[i]][1]
d2[[i]][1,]
r_index <- which(unique(J[[i]])==row.)
d2[[i]][row.,] %*% r[[i]][[r_index]]
row. = 1
r_index <- which(unique(J[[i]])==row.)
d2[[i]][row.,] %*% r[[i]][[r_index]]
ttt <- d2[[i]][row.,] %*% r[[i]][[r_index]]
dim(ttt)
d2[[i]][row.,]
dim(r[[i]][[r_index]])
dim(r[[i]][[2]])
r[[i]][[r_index]]
d2[[i]][row.,]
d2[[i]][row.,] %*% r[[i]][[r_index]]
t(d2[[i]][row.,]) %*% r[[i]][[r_index]]
d2[[i]][row.,] %*% t(r[[i]][[r_index]])
d2[[i]][row.,] * r[[i]][[r_index]]
sapply(J[[i]], function(row.){
r_index <- which(unique(J[[i]])==row.)
d2[[i]][row.,] * r[[i]][[r_index]] # TO Do: change dim
})
t <- sapply(J[[i]], function(row.){
r_index <- which(unique(J[[i]])==row.)
d2[[i]][row.,] * r[[i]][[r_index]] # TO Do: change dim
})
dim(t)
Z <- vector("list",nblocks)
Z[[i]] <- sapply(J[[i]], function(row.){
r_index <- which(unique(J[[i]])==row.)
d2[[i]][row.,] * r[[i]][[r_index]] # TO Do: change dim
})
Z <- vector("list",nblocks)
for (i in seq_len(nblocks)) {
useblock <- blocks[i]
usere <- re[id == useblock]
num <- max(usere$cn)
usecoef <- usere$coef
usegroup <- usere$group
d2[[i]] <- brmsmargins:::.buildZ(data = dtmp, block = useblock, number = num, dpar = dpar)
J[[i]] <- .buildJ(dtmp, useblock)[[1]]
r[[i]] <- .buildr(data = post, id = J[[i]], usecoef,usegroup)  # TO DO: change dim
Z[[i]] <- sapply(J[[i]], function(row.){
r_index <- which(unique(J[[i]])==row.)
d2[[i]][row.,] * r[[i]][[r_index]] # TO Do: change dim
})
}
for (i in seq_len(nblocks)) {
useblock <- blocks[i]
usere <- re[id == useblock]
num <- max(usere$cn)
usecoef <- usere$coef
usegroup <- usere$group
d2[[i]] <- brmsmargins:::.buildZ(data = dtmp, block = useblock, number = num, dpar = dpar)
J[[i]] <- .buildJ(dtmp, useblock)[[1]]
r[[i]] <- .buildr(data = post, id = J[[i]], usecoef,usegroup)  # TO DO: change dim
Z[[i]] <- sapply(J[[i]], function(row.){
r_index <- which(unique(J[[i]])==row.)
d2[[i]][row.,] * r[[i]][[r_index]] # TO Do: change dim
})
}
useblock <- blocks[i]
usere <- re[id == useblock]
num <- max(usere$cn)
usecoef <- usere$coef
usegroup <- usere$group
d2[[i]] <- brmsmargins:::.buildZ(data = dtmp, block = useblock, number = num, dpar = dpar)
J[[i]] <- .buildJ(dtmp, useblock)[[1]]
r[[i]] <- .buildr(data = post, id = J[[i]], usecoef,usegroup)  # TO DO: change dim
Z[[i]] <- sapply(J[[i]], function(row.){
r_index <- which(unique(J[[i]])==row.)
d2[[i]][row.,] * r[[i]][[r_index]] # TO Do: change dim
})
i
i = 2
useblock <- blocks[i]
usere <- re[id == useblock]
num <- max(usere$cn)
usecoef <- usere$coef
usegroup <- usere$group
d2[[i]] <- brmsmargins:::.buildZ(data = dtmp, block = useblock, number = num, dpar = dpar)
J[[i]] <- .buildJ(dtmp, useblock)[[1]]
r[[i]] <- .buildr(data = post, id = J[[i]], usecoef,usegroup)  # TO DO: change dim
Z[[i]] <- sapply(J[[i]], function(row.){
r_index <- which(unique(J[[i]])==row.)
d2[[i]][row.,] * r[[i]][[r_index]] # TO Do: change dim
})
yhat
# mean
dim(yhat)
# mean
dim(Z[[1]])
# mean
apply(Z[[1]],1,mean)
# mean
dim(apply(Z[[1]],1,mean))
# mean
length(apply(Z[[1]],1,mean))
# mean
length(apply(Z[[1]],2,mean))
dim(yhat+apply(Z[[1]],2,mean))
# mean
sapply(Z, function(Z.) apply(Z.,2,mean))
# mean
dim(sapply(Z, function(Z.) apply(Z.,2,mean)))
# mean
sapply(Z, function(Z.) apply(Z.,2,mean)) %>% apply(1, sum)
# mean
sapply(Z, function(Z.) apply(Z.,2,mean)) %>% apply(1, sum) %<% dim
# mean
sapply(Z, function(Z.) apply(Z.,2,mean)) %>% apply(1, sum) %>% dim
# mean
sapply(Z, function(Z.) apply(Z.,2,mean)) %>% apply(1, sum) %>% length
# mean
yhat <- yhat +  sapply(Z, function(Z.) apply(Z.,2,mean)) %>% apply(1, sum)
source("marginalcoef.R")
source("prediction.R")
source("builder.R")
source("marginalcoef.R")
source("prediction.R")
source("builder.R")
mc <- marginalcoef(object = brms_model,fullbayesian = TRUE, centered = TRUE, preddat = beaverspred, CI = 0.95, CIType="ETI", posterior = T)
warnings()
mc <- marginalcoef(object = brms_model,fullbayesian = TRUE, centered = TRUE, preddat = beaverspred, CI = 0.95, CIType="ETI", posterior = T)
yhat
# TO Do: change dim
# mean
yhat <- yhat +  sapply(Z, function(Z.) apply(Z.,2,mean)) %>% apply(1, sum)
View(yhat)
dim(yhat)
mc <- marginalcoef(object = brms_model,fullbayesian = TRUE, centered = TRUE, preddat = beaverspred, CI = 0.95, CIType="ETI", posterior = T)
warnings()
mc <- marginalcoef(object = brms_model,fullbayesian = TRUE, centered = TRUE, preddat = beaverspred, CI = 0.95, CIType="ETI", posterior = T)
mu
View(mu)
links$fun(t(mu$Posterior))
# convert \mu to \eta = g(\mu). links$fun: link function
# get lambda_pa in equation 6 in Hedeker's paper
y <- links$fun(t(mu$Posterior))
View(y)
links$fun
dim(t(mu$Posterior))
View(t(mu$Posterior))
links$fun(1)
links$fun(0.2)
library(mam)
library(mgcv)
library(ggplot2)
library(mgcv)
library(brms)
library(data.table)
library(brmsmargins)
source("marginalcoef.R")
source("prediction.R")
source("builder.R")
data(beavers)
# Create Sex indicator variables. Change 0's to small nonzero value
# due to internal behaviour of lme4 and Matrix packages which convert data zeroes
# to structural zeroes. See https://github.com/lme4/lme4/issues/671
beavers$sex0 <- as.numeric(beavers$sex=="M");beavers$sex0[beavers$sex0==0] <- 0.0000001
beavers$sex1 <- as.numeric(beavers$sex=="F");beavers$sex1[beavers$sex1==0] <- 0.0000001
# Create the prediction data
beaverspred <- data.frame(time=rep(seq(min(beavers$time),max(beavers$time),length=100),2),
timeM=c(seq(min(beavers$time),max(beavers$time),length=100),rep(0,100)),
timeF=c(rep(0,100),seq(min(beavers$time),max(beavers$time),length=100)),
year=factor(levels(beavers$year)[1],levels=levels(beavers$year)),
sex=factor(rep(c("M","F"),each=100),levels=levels(beavers$sex)))
## BMAM
if(FALSE){
## Don't run. Very slow. use load("data/beavers_brms.rds")
brms_model <- brm(bf(y ~ year + s(timeF) + s(timeM) + (sex0-1|id)+(sex1-1|id)),
data = beavers, family = "bernoulli", cores = 2, seed = 17,
warmup = 1000, iter = 2000, chains = 4,backend = "cmdstanr")
# save(brms_model,file="data/beavers_brms.rds")
}
load("data/beavers_brms.rds")
mc <- marginalcoef(object = brms_model,fullbayesian = TRUE, centered = TRUE, preddat = beaverspred, CI = 0.95, CIType="ETI", posterior = T)
max(yhat)
ttt <- sapply(Z, function(Z.) apply(Z.,2,mean)) %>% apply(1, sum)
library(dplyr)
library(dplyr)
sapply(Z, function(Z.) apply(Z.,2,mean)) %>% apply(1, sum)
ttt <- sapply(Z, function(Z.) apply(Z.,2,mean)) %>% apply(1, sum)
dim(ttt)
length(ttt)
length(yhat)
dim(yhat)
# TO Do: change dim
# TO DO: link function
#        yhat <- link(yhat .... )
sapply(Z, function(Z.) apply(Z.,2,mean))
# TO Do: change dim
# TO DO: link function
#        yhat <- link(yhat .... )
ttt <- sapply(Z, function(Z.) apply(Z.,2,mean))
dim(ttt)
dim(yhat)
yhat_row <- yhat[1,]
length(yhat_row)
yhat_row + Z
sum(Z)
View(Z)
ttt <- unlist(Z)
dim(ttt)
View(ttt)
tt <- as.matrix(ttt,nrow = length(Z[[1]]))
dim(tt)
View(Z)
Z.combined <- do.call(rbind,Z)
dim(Z.combined)
Z.combined <- do.call(cbind,Z)
dim(Z.combined)
yhat_row
dim(yhat_row)
length(yhat_row)
dim(yhat)
Z.combined <- do.call(rbind,Z)
dim(Z.combined)
Z.combined <- do.call(cbind,Z)
dim(Z.combined)
ttt <- apply(Z.combined,1,sum)
dim(ttt)
length(ttt)
yhat_row
length(yhat_row)
dim(Z.combined)
## import libraries
library(mam)
library(mgcv)
library(ggplot2)
library(mgcv)
library(brms)
library(data.table)
library(brmsmargins)
library(dplyr)
source("marginalcoef.R")
source("prediction.R")
source("marginalcoef.R")
source("prediction.R")
source("builder.R")
data(beavers)
# Create Sex indicator variables. Change 0's to small nonzero value
# due to internal behaviour of lme4 and Matrix packages which convert data zeroes
# to structural zeroes. See https://github.com/lme4/lme4/issues/671
beavers$sex0 <- as.numeric(beavers$sex=="M");beavers$sex0[beavers$sex0==0] <- 0.0000001
beavers$sex1 <- as.numeric(beavers$sex=="F");beavers$sex1[beavers$sex1==0] <- 0.0000001
# Create the prediction data
beaverspred <- data.frame(time=rep(seq(min(beavers$time),max(beavers$time),length=100),2),
timeM=c(seq(min(beavers$time),max(beavers$time),length=100),rep(0,100)),
timeF=c(rep(0,100),seq(min(beavers$time),max(beavers$time),length=100)),
year=factor(levels(beavers$year)[1],levels=levels(beavers$year)),
sex=factor(rep(c("M","F"),each=100),levels=levels(beavers$sex)))
load("data/beavers_brms.rds")
mc <- marginalcoef(object = brms_model,fullbayesian = TRUE, centered = TRUE, preddat = beaverspred, CI = 0.95, CIType="ETI", posterior = T)
source("marginalcoef.R")
source("prediction.R")
source("builder.R")
source("prediction.R")
mc <- marginalcoef(object = brms_model,fullbayesian = TRUE, centered = TRUE, preddat = beaverspred, CI = 0.95, CIType="ETI", posterior = T)
source("prediction.R")
source("builder.R")
source("marginalcoef.R")
source("prediction.R")
source("builder.R")
source("prediction.R")
source("prediction.R")
source("prediction.R")
source("prediction.R")
source("prediction.R")
source("marginalcoef.R")
source("prediction.R")
source("builder.R")
getwd()
source("marginalcoef.R")
source("prediction.R")
source("builder.R")
debugSource("~/Documents/Research/Bayesian MAM/BMAM/prediction.R")
debugSource("~/Documents/Research/Bayesian MAM/BMAM/prediction.R")
source("prediction.R")
